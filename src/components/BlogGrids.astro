---
const scaleNum = 8;
const gridColumnArray = [...Array(scaleNum)].map((_, i) => i);
---

<section class="v">
  <div class="--g">
    <div class="--g_1_8">
      <p>グリッドの見本</p>
    </div>
    <div class="--g_5_8">
      <img src="/img/photos/photo/L1001466.jpg" />
    </div>
    <div class="--g_2_2-7">
      <p>
        写真における陰影（シャドウ）は、単なる光の不在ではなく、画像に深みと立体感を与える重要な要素です。適切に活用された陰影は、写真に感情やストーリーを吹き込み、見る者の注意を引きつける力を持っています。
      </p>
    </div>
  </div>
</section>

<div class="gridBase">
  <div class="grid">
    {
      gridColumnArray.map((num) => (
        <div class="grid_column">
          <span class="-g_scaleLabel">{num + 1}</span>
        </div>
      ))
    }
  </div>
  <div class="grid grid-row">
    {
      gridColumnArray.map((num) => (
        <div class="grid_column">
          <span class="-g_scaleLabel">{num + 1}</span>
        </div>
      ))
    }
  </div>
</div>

<style>
  :root {
    --grid-gap: 2svh;
    --grid: calc(((100svh - 4svh * 2) - var(--grid-gap) * (8 - 1)) / 8);
  }
  .v {
    writing-mode: vertical-rl;
    width: 100%;
    height: 100%;
    overflow-x: auto;
  }

  .--g {
    display: flex;
    flex-direction: column;
    gap: 2svb;
    margin-inline: 32px;
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  .--g-test {
    width: var(--grid);
    height: var(--grid);
    background-color: rgb(128 143 156 / 0.5);
  }
  .--g_5_8 {
    width: calc(var(--grid) * 5 + var(--grid-gap) * (5 - 1));
    height: calc(var(--grid) * 8 + var(--grid-gap) * (8 - 1));
  }
  .--g_1_8 {
    width: calc(var(--grid) * 1 + var(--grid-gap) * (1 - 1));
    height: calc(var(--grid) * 8 + var(--grid-gap) * (8 - 1));
  }
  .--g_2_2-7 {
    width: calc(var(--grid) * 2 + var(--grid-gap) * (2 - 1));
    height: calc(var(--grid) * 2 + var(--grid-gap) * (2 - 1));
    margin-top: calc(var(--grid) * 6 + var(--grid-gap) * (6));
  }

  .g {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    gap: 2svb;
    margin-inline: 32px;
  }
  .g_8 {
    grid-column: 1 / 9;
    grid-row: 1 / 9;
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .gridBase {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 100vh;
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    gap: 2svb;
    margin-inline: 32px;
    height: 100%;
    width: 92svb;
    @media (width < 768px) {
      grid-template-columns: repeat(8, 1fr);
      width: 92svw;
      margin-inline: 4svw;
    }
  }
  .grid-row {
    position: absolute;
    top: 4svb;
    left: 0;
    width: 110vw;
    height: 92svb;
    margin-inline: 0;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(8, 1fr);
    gap: 2svb;
    @media (width < 768px) {
      margin-inline: -4svw;
    }
  }
  .grid_column {
    background-color: rgb(128 143 156 / 0.5);
    width: 100%;
    height: 100%;
  }
</style>
